//using System.Globalization;
//using System.Collections;

namespace cs8080
{
    class Disassembler8080
    {
    	private static int OPbytes(byte opcode)
    		{
            return opcode switch
            {
                0x01 or 0x11 or 0x21 or 0x22 or 0x2a or 0x2e or 0x31 or 0x32 or 0x3a or 0xc2 or 0xc3 or 0xc4 or 0xca or 0xcc or 0xcd or 0xd2 or 0xd4 or 0xda or 0xdc or 0xe2 or 0xe4 or 0xea or 0xec or 0xf2 or 0xf4 or 0xfa or 0xfc => 3,
                0x06 or 0x0e or 0x16 or 0x1e or 0x26 or 0x2e or 0x36 or 0x3e or 0xc6 or 0xce or 0xd3 or 0xd6 or 0xdb or 0xde or 0xe6 or 0xee or 0xf6 or 0xfe => 2,
                _ => 1,
            };
        }

        private static string OPlookup(byte opcode, byte opcodep1, byte opcodep2)
        {
            var opcodetable = new SortedList<int,string>(){
				{0x00,"NOP"},
				{0x01,$"LXI  B,#${opcodep2:x2}{opcodep1:x2}"}, // LXI takes byte 3 and byte 2
				{0x02,"STAX B"},
				{0x03,"INX  B"},
				{0x04,"INR  B"},
				{0x05,"DCR  B"},
                {0x06,$"MVI  B,#${opcodep1:x2}"}, // MVI takes byte 2 only
                {0x07,"RLC"},
				{0x08,"NOP"},
                {0x09,"DAD  B"},
                {0x0a,"LDAX B"},
                {0x0b,"DCX  B"},
                {0x0c,"INR  C"},
                {0x0d,"DCR  C"},
                {0x0e,$"MVI  C,#${opcodep1:x2}"},
                {0x0f,"RRC"},
				{0x10,"NOP"},
                {0x11,$"LXI  D,#${opcodep2:x2}{opcodep1:x2}"},  // LXI takes byte 3 and byte 2
                {0x12,"STAX D"},
                {0x13,"INX  D"},
                {0x14,"INR  D"},
                {0x15,"DCR  D"},
                {0x16,$"MVI  D,#${opcodep1:x2}"}, // MVI takes byte 2 only
                {0x17,"RAL"},
				{0x18,"NOP"},
                {0x19,"DAD  D"},
                {0x1a,"LDAX D"},
                {0x1b,"DCX  D"},
                {0x1c,"INR  E"},
                {0x1d,"DCR  E"},
                {0x1e,$"MVI  E,#${opcodep1:x2}"},
                {0x1f,"RAR"},
				{0x20,"NOP"},
                {0x21,$"LXI  H,#${opcodep2:x2}{opcodep1:x2}"}, // LXI takes byte 3 and byte 2
                {0x22,$"SHLD ${opcodep2:x2}{opcodep1:x2}"}, // SHLD takes byte 3 and 2
                {0x23,"INX  H"},
                {0x24,"INR  H"},
                {0x25,"DCR  H"},
                {0x26,$"MVI  H,#${opcodep1:x2}"}, // MVI takes byte 2 only
                {0x27,"DAA"},
				{0x28,"NOP"},
                {0x29,"DAD  H"},
                {0x2a,$"LHLD ${opcodep2:x2}{opcodep1:x2}"},
                {0x2b,"DCX  H"},
                {0x2c,"INR  L"},
                {0x2d,"DCR  L"},
                {0x2e,$"MVI  L,#${opcodep1:x2}"},
                {0x2f,"CMA"},
				{0x30,"NOP"},
                {0x31,$"LXI  SP,#${opcodep2:x2}{opcodep1:x2}"}, // LXI takes byte 3 and byte 2
                {0x32,$"STA  ${opcodep2:x2}{opcodep1:x2}"}, // SHLD takes byte 3 and 2
                {0x33,"INX  SP"},
                {0x34,"INR  M"},
                {0x35,"DCR  M"},
                {0x36,$"MVI  M,#${opcodep1:x2}"}, // MVI takes byte 2 only
                {0x37,"STC"},
				{0x38,"NOP"},
                {0x39,"DAD  SP"},
                {0x3a,$"LDA  ${opcodep2:x2}{opcodep1:x2}"},
                {0x3b,"DCX  SP"},
                {0x3c,"INR  A"},
                {0x3d,"DCR  A"},
                {0x3e,$"MVI  A,#${opcodep1:x2}"},
                {0x3f,"CMC"},
                {0x40,"MOV  B,B"},
                {0x41,"MOV  B,C"},
                {0x42,"MOV  B,D"},
                {0x43,"MOV  B,E"},
                {0x44,"MOV  B,H"},
                {0x45,"MOV  B,L"},
                {0x46,"MOV  B,M"},
                {0x47,"MOV  B,A"},
                {0x48,"MOV  C,B"},
                {0x49,"MOV  C,C"},
                {0x4a,"MOV  C,D"},
                {0x4b,"MOV  C,E"},
                {0x4c,"MOV  C,H"},
                {0x4d,"MOV  C,L"},
                {0x4e,"MOV  C,M"},
                {0x4f,"MOV  C,A"},
                {0x50,"MOV  D,B"},
                {0x51,"MOV  D,C"},
                {0x52,"MOV  D,D"},
                {0x53,"MOV  D,E"},
                {0x54,"MOV  D,H"},
                {0x55,"MOV  D,L"},
                {0x56,"MOV  D,M"},
                {0x57,"MOV  D,A"},
                {0x58,"MOV  E,B"},
                {0x59,"MOV  E,C"},
                {0x5a,"MOV  E,D"},
                {0x5b,"MOV  E,E"},
                {0x5c,"MOV  E,H"},
                {0x5d,"MOV  E,L"},
                {0x5e,"MOV  E,M"},
                {0x5f,"MOV  H,A"},
                {0x60,"MOV  H,B"},
                {0x61,"MOV  H,C"},
                {0x62,"MOV  H,D"},
                {0x63,"MOV  H,E"},
                {0x64,"MOV  H,H"},
                {0x65,"MOV  H,L"},
                {0x66,"MOV  H,M"},
                {0x67,"MOV  L,A"},
                {0x68,"MOV  L,B"},
                {0x69,"MOV  L,C"},
                {0x6a,"MOV  L,D"},
                {0x6b,"MOV  L,E"},
                {0x6c,"MOV  L,H"},
                {0x6d,"MOV  L,L"},
                {0x6e,"MOV  L,M"},
                {0x6f,"MOV  M,A"},
                {0x70,"MOV  M,B"},
                {0x71,"MOV  M,C"},
                {0x72,"MOV  M,D"},
                {0x73,"MOV  M,E"},
                {0x74,"MOV  M,H"},
                {0x75,"MOV  M,L"},
                {0x76,"HLT"},
                {0x77,"MOV  M,A"},
                {0x78,"MOV  A,B"},
                {0x79,"MOV  A,C"},
                {0x7a,"MOV  A,D"},
                {0x7b,"MOV  A,E"},
                {0x7c,"MOV  A,H"},
                {0x7d,"MOV  A,L"},
                {0x7e,"MOV  A,M"},
                {0x7f,"MOV  A,A"},
                {0x80,"ADD  B"},
                {0x81,"ADD  C"},
                {0x82,"ADD  D"},
                {0x83,"ADD  E"},
                {0x84,"ADD  H"},
                {0x85,"ADD  L"},
                {0x86,"ADD  M"},
                {0x87,"ADD  A"},
                {0x88,"ADC  B"},
                {0x89,"ADC  C"},
                {0x8a,"ADC  D"},
                {0x8b,"ADC  E"},
                {0x8c,"ADC  H"},
                {0x8d,"ADC  L"},
                {0x8e,"ADC  M"},
                {0x8f,"ADC  A"},
                {0x90,"SUB  B"},
                {0x91,"SUB  C"},
                {0x92,"SUB  D"},
                {0x93,"SUB  E"},
                {0x94,"SUB  H"},
                {0x95,"SUB  L"},
                {0x96,"SUB  M"},
                {0x97,"SUB  A"},
                {0x98,"SBB  B"},
                {0x99,"SBB  C"},
                {0x9a,"SBB  D"},
                {0x9b,"SBB  E"},
                {0x9c,"SBB  H"},
                {0x9d,"SBB  L"},
                {0x9e,"SBB  M"},
                {0x9f,"SBB  A"},
                {0xa0,"ANA  B"},
                {0xa1,"ANA  C"},
                {0xa2,"ANA  D"},
                {0xa3,"ANA  E"},
                {0xa4,"ANA  H"},
                {0xa5,"ANA  L"},
                {0xa6,"ANA  M"},
                {0xa7,"ANA  A"},
                {0xa8,"XRA  B"},
                {0xa9,"XRA  C"},
                {0xaa,"XRA  D"},
                {0xab,"XRA  E"},
                {0xac,"XRA  H"},
                {0xad,"XRA  L"},
                {0xae,"XRA  M"},
                {0xaf,"XRA  A"},
                {0xb0,"ORA  B"},
                {0xb1,"ORA  C"},
                {0xb2,"ORA  D"},
                {0xb3,"ORA  E"},
                {0xb4,"ORA  H"},
                {0xb5,"ORA  L"},
                {0xb6,"ORA  M"},
                {0xb7,"ORA  A"},
                {0xb8,"CMP  B"},
                {0xb9,"CMP  C"},
                {0xba,"CMP  D"},
                {0xbb,"CMP  E"},
                {0xbc,"CMP  H"},
                {0xbd,"CMP  L"},
                {0xbe,"CMP  M"},
                {0xbf,"CMP  A"},
                {0xc0,"RNZ"},
                {0xc1,"POP  B"},
                {0xc2,$"JNZ  ${opcodep2:x2}{opcodep1:x2}"},
                {0xc3,$"JMP  ${opcodep2:x2}{opcodep1:x2}"},
                {0xc4,$"CNZ  ${opcodep2:x2}{opcodep1:x2}"},
                {0xc5,"PUSH B"},
                {0xc6,$"ADI  #${opcodep1:x2}"},
                {0xc7,"RST  0"},
                {0xc8,"RZ"},
                {0xc9,"RET"},
                {0xca,$"JZ   ${opcodep2:x2}{opcodep1:x2}"},
				{0xcb,"NOP"},
                {0xcc,$"CZ   ${opcodep2:x2}{opcodep1:x2}"},
                {0xcd,$"CALL ${opcodep2:x2}{opcodep1:x2}"},
                {0xce,$"ACI  #${opcodep1:x2}"},
                {0xcf,"RST  1"},
                {0xd0,"RNC"},
                {0xd1,"POP  D"},
                {0xd2,$"JNC  ${opcodep2:x2}{opcodep1:x2}"},
                {0xd3,$"OUT  #${opcodep1:x2}"},
                {0xd4,$"CNC  ${opcodep2:x2}{opcodep1:x2}"},
                {0xd5,"PUSH D"},
                {0xd6,$"SUI  #${opcodep1:x2}"},
                {0xd7,"RST  2"},
                {0xd8,"RC"},
				{0xd9,"NOP"},
                {0xda,$"JC   ${opcodep2:x2}{opcodep1:x2}"},
                {0xdb,$"IN   #${opcodep1:x2}"},
                {0xdc,$"CC   ${opcodep2:x2}{opcodep1:x2}"},
				{0xdd,"NOP"},
                {0xde,$"SBI  #${opcodep1:x2}"},
                {0xdf,"RST  3"},
                {0xe0,"RPO"},
                {0xe1,"POP  H"},
                {0xe2,$"JPO  ${opcodep2:x2}{opcodep1:x2}"},
                {0xe3,"XTHL"},
                {0xe4,$"CPO  ${opcodep2:x2}{opcodep1:x2}"},
                {0xe5,"PUSH H"},
                {0xe6,$"ANI  #${opcodep1:x2}"},
                {0xe7,"RST  4"},
                {0xe8,"RPE"},
                {0xe9,"PCHL"},
                {0xea,$"JPE  ${opcodep2:x2}{opcodep1:x2}"},
                {0xeb,"PCHL"},
                {0xec,$"CPE  ${opcodep2:x2}{opcodep1:x2}"},
				{0xed,"NOP"},
                {0xee,$"XRI  ${opcodep1:x2}"},
                {0xef,"RST  5"},
                {0xf0,"RP"},
                {0xf1,"POP  PSW"},
                {0xf2,$"JP   ${opcodep2:x2}{opcodep1:x2}"},
                {0xf3,"DI"},
                {0xf4,$"CP   ${opcodep2:x2}{opcodep1:x2}"},
                {0xf5,"PUSH PSW"},
                {0xf6,$"ORI  #${opcodep1:x2}"},
                {0xf7,"RST  6"},
                {0xf8,"RM"},
                {0xf9,"SPHL"},
                {0xfa,$"JM   ${opcodep2:x2}{opcodep1:x2}"},
                {0xfb,"EI"},
                {0xfc,$"CM   ${opcodep2:x2}{opcodep1:x2}"},
				{0xfd,"NOP"},
                {0xfe,$"CPI  #${opcodep1:x2}"},
                {0xff,"RST  7"}};
            return opcodetable[opcode];
        }

        public static void Disassembler(string path)
        {
            byte[] opcodes = File.ReadAllBytes(path);
            int balen = opcodes.Length-2;
            for (int i = 0; i < balen; i++)
            {
                Console.WriteLine($"{i:x4}  {OPlookup(opcodes[i], opcodes[i+1], opcodes[i+2])}");
                i+=OPbytes(opcodes[i])-1;
            }
            Console.WriteLine($"{balen:x4}  {OPlookup(opcodes[balen], opcodes[balen+1], 0)}");
            balen++;
            Console.WriteLine($"{balen:x4}  {OPlookup(opcodes[balen], 0, 0)}");
        }
    }
}
